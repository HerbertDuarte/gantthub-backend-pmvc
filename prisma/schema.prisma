generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UsuarioPrisma {
  id           String               @id @default(uuid())
  nome         String
  email        String               @unique
  situacao     Int                  @default(1)
  login        String               @unique
  role         Int                  @default(1)
  refreshToken String?
  senha        String
  imageUrl     String?
  createdAt    DateTime             @default(now()) @db.Timestamptz(3)
  setores      UsuarioSetorPrisma[]
  tarefas      TarefaPrisma[]
  projetos     ProjetoPrisma[]
  subTarefas   SubTarefaPrisma[]

  @@map("usuarios")
}

model ProjetoPrisma {
  id        String        @id @default(uuid())
  nome      String
  descricao String?
  marcos    MarcoPrisma[]

  createdBy   UsuarioPrisma @relation(fields: [createdById], references: [id])
  createdById String        @default("1d52e4f9-ce43-48a6-b0fd-78bf5470c22f")
  createdAt   DateTime      @default(now()) @db.Timestamptz(3)

  @@map("projetos")
}

model MarcoPrisma {
  id        String         @id @default(uuid())
  nome      String
  tarefas   TarefaPrisma[]
  createdAt DateTime       @default(now()) @db.Timestamptz(3)

  projeto   ProjetoPrisma @relation(fields: [projetoId], references: [id], onDelete: Cascade)
  projetoId String

  @@map("marcos")
}

model TarefaPrisma {
  id            String   @id @default(uuid())
  nome          String
  descricao     String
  dataInicio    DateTime
  dataFim       DateTime
  status        Int
  createdAt     DateTime @default(now()) @db.Timestamptz(3)
  justificativa String?

  usuario   UsuarioPrisma @relation(fields: [usuarioId], references: [id])
  usuarioId String

  marco      MarcoPrisma       @relation(fields: [marcoId], references: [id], onDelete: Cascade)
  marcoId    String
  subTarefas SubTarefaPrisma[]

  @@map("tarefas")
}

model SubTarefaPrisma {
  id            String   @id @default(uuid())
  nome          String
  descricao     String
  dataInicio    DateTime
  dataFim       DateTime
  status        Int
  createdAt     DateTime @default(now()) @db.Timestamptz(3)
  justificativa String?

  usuario   UsuarioPrisma @relation(fields: [usuarioId], references: [id])
  usuarioId String

  tarefaPai   TarefaPrisma @relation(fields: [tarefaPaiId], references: [id], onDelete: Cascade)
  tarefaPaiId String

  @@map("sub_tarefas")
}

model SetorPrisma {
  id        String   @id @default(uuid())
  nome      String
  createdAt DateTime @default(now()) @db.Timestamptz(3)

  usuarios UsuarioSetorPrisma[]

  @@map("setores")
}

model UsuarioSetorPrisma {
  usuarioId String
  setorerId String
  createdAt DateTime @default(now()) @db.Timestamptz(3)

  usuario UsuarioPrisma @relation(fields: [usuarioId], references: [id])
  setor   SetorPrisma   @relation(fields: [setorerId], references: [id])

  @@id([usuarioId, setorerId])
  @@map("usuarios_setores")
}
